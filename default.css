/*

*/

html{
    font-size: 32px;
}

h1{
    /*font-size: 2em;
    font-size: 2rem;*/
}
span{
    /*font-size: 0.5em;*/
    font-size: 0.5rem;
}
/*
div{
    width: 100px;
    height: 50px;
}
明度・彩度を規定できるhsl(hsla)*/
#box1{
    background: rgb(255, 100, 100);
}
#box2{
    background: rgba(255, 100, 100,.2);
}
#box3{
    background: hsla(210, 100%, 50%,.7);
}
#box4{
    background: hsla(210, 100%, 40%,.7);
}
img{
    /*border: 7px solid blue;
    opacity: 0.3;*/
}
/*
-a [href^="foo"]・・・fooから始まる
-a [href$="foo"]・・・fooで終わる
-a [href*="foo"]・・・fooを含む
*/
a[href^="http"]{
    color: orange;
}
a[href$=".com"]{
    color: green;
}
a[href*="page"]{
    color: gray;
}
/*
擬似クラス
:nth-child()
何番目の子要素に適用するか

li:last-child{
    background: violet;
}
li:nth-child(3){
    background: blue;
}
odd:三文字なので奇数　even:四文字なので偶数

li:nth-child(odd){
    background: blue;
}
li:nth-child(even){
    background: violet;
}
nを使って指定も可能
li:nth-child(3n+1){
    background: blue;
}
最後から数える時はnth-last-child
子要素が一つしかない時はonly-child

li:nth-last-child(4){
    background: blue;
}
li:only-child{
    background: violet;
}

:nth-of-type()
隣接していない場合でも、何番目に適用するかを決める
p:first-of-type
p:last-of-type

p:nth-of-type(2){
    background: violet;
}
p:nth-last-of-type(2){
    background: violet;
}
h2:only-of-type{
    background: blue;
}
li:not(.target){
    background: violet;
}
li:empty{
    background: gray;
}
*/
input[type="text"]:enabled{
    background: violet;
}
input[type="checkbox"]:checked + label{
    background: skyblue;
}

/*div{
    width: 400px;
    height:400px;
    background: url(sheep2.jpg) center center;
    border-radius: 10px;
    border-radius: 50%;
}
*/
.radius{
    border-radius: 100%;
}
header{
 /*    width: 100%;
    height: 1000px;
    background: url('cafe.jpg') no-repeat 0 0,
    url('sheep.jpg') no-repeat 30px 30px,
    url('sheep2.jpg') no-repeat bottom right;
   background-image: url(cafe.jpg);
    background-repeat: repeat-x;
    background-size: 40% cover;
*/
}
/*div{
    width: 200px;
    height: 200px;
    background-image: linear-gradient(to top left, skyblue,blue);
    background-image: linear-gradient(lightgreen 10%,skyblue 70%,blue);
    background-image: repeating-linear-gradient(lightgreen,skyblue 20px);

}

div{
    width: 200px;
    height: 200px;
    background-image: radial-gradient(ellipse 20px 20px at 30px 40px,skyblue,blue);

}
box-shadow
text-shadow

div{
    width: 200px;
    height: 100px;
    background: #fff;
    box-shadow: 10px 20px 4px 10px rgba(0, 0, 0, .4) inset,
    10px 20px 4px 10px skyblue;
}
h1{
    text-shadow: 1px 2px 0 skyblue;
}

div{
    width: 100px;
    height: 100px;
    margin-bottom: 20px;
    position: absolute;
    top: 100px;
    left: 100px;

}

#box10{
    background: skyblue;
    opacity: .5;
}
#box11{
    background: orange;
    opacity: .5;
    transform: translate(20px,40px)
    transform: skew(10deg,20deg);
    transform: rotate(30deg);
    transform-origin: 0 0;
}
transitionについて
div{
    width: 100px;
    height: 50px;
    background: skyblue;
    transition-property: all;
    transition-duration: 2s;
    transition-timing-function: ease;
    transition-delay: 0.8s;
}
div:hover{
    width: 200px;
    height: 50px;
    background: blue;
    
}

div{
    width: 50px;
    height: 50px;
    background: skyblue;
    -webkit-animation-name: slidein;
    -webkit-animation-duration: 1s;
    -webkit-animation-timing-function: ease; 
    -webkit-animation-delay: .1s; 
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-direction: alternate;

}
@-webkit-keyframes slidein{
    0%{
        margin-left: 100%;
        background: white;

    }
    70%{
        margin-left: 50%;
        background: blue;
    
    }
    100%{
        margin-left: 0%;

    }
}
*/
body{
    margin: 0;
    padding: 0;

}
.conteiner{
    width: 320px;
    height: 100px;
    background: skyblue;

}
.box{
    box-sizing: border-box;

    width: 100px;
    height: 100px;
    background: #eee;
    float: left;
    padding: 10px;
    border-bottom: 10px solid #ccc;
}
.box + .box{
    margin-left: 10px;
}